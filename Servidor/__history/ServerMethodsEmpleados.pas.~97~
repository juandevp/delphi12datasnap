unit ServerMethodsEmpleados;

interface

uses System.SysUtils, System.Classes, Datasnap.DSServer, Datasnap.DSAuth,
  UDmEmpleados, System.JSON, REST.JSON;

type
{$METHODINFO ON}
  TServerMethods1 = class(TComponent)
  private

    { Private declarations }
  public
    { Public declarations }
    function updateEmpleado(AJsonObject: TJSONObject): string;
    function getdependencias: TJSONValue;
  published

    { Metodos para declarar declarations }
  end;
{$METHODINFO OFF}

implementation

uses UEmpleado;

function TServerMethods1.getdependencias: TJSONValue;
// var
// JsonDependencias: TjsonA;
begin
  Result := TJson.ObjectToJsonObject(DmEmpleados.ObtenerDependencias)
    .GetValue('listHelper');
end;

function TServerMethods1.updateEmpleado(AJsonObject: TJSONObject): string;
var
  JsonEmpleados: TJSONObject;
  Empleado: TEmpleado;
begin

  try
    Empleado := TJson.JsonToObject<TEmpleado>(AJsonObject.ToString);
    DmEmpleados.GuardarEmpleados(Empleado);
    Result := 'Registrado correctamente el empleado identificado con:' +
      Empleado.fun_cidentificacion;
  except
    on E: Exception do
    begin
      raise Exception.Create(E.Message);
    end;
  end;

end;

end.
